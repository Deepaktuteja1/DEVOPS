name: Deepak Pipeline
on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
    
jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout code from dev branch
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: |
          mkdir -p test results
          npm test -- --reporter mocha-junit-reporter --reporter-options mochaFile=./test-results/results.xml
      - name: publish test result
        if: always ()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: test-results-artifact
          path: test-results/results.xml
      - name: run-code-quality-usingeslint
        run: |
          set -o pipefail
          npx eslint . --ext .js --exit-on-fatal-error -f stylish | tee lint-report.txt

      - name: publish cd
        if: always ()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: test-cd-artifact
          path: lint-report.txt

      - name: run depencny scanning
        run: npm audit --audit-level=high --json > npm-audit-report.json

      - name: publish depency scanning
        if: always ()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: depency scanning-artifact
          path: npm-audit-report.json

      - name: build docker file
        run: docker build -t my-node-app .

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh
          sudo mv ./bin/trivy /usr/local/bin/
          trivy --version
      - name: scan docker image
        run: trivy image --exit-code 1 --severity HIGH,CRITICAL my-node-app

      - name: run test inside docker
        run: docker run --rm my-node-app npm test

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
      - name: tag docker image
        run: |
          docker tag my-node-app ${{ secrets.DOCKER_HUB_USERNAME }}/my-node-app:dev-latest
          docker tag my-node-app ${{ secrets.DOCKER_HUB_USERNAME }}/my-node-app:dev-${{ github.sha }}
      - name: push docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-node-app:dev-latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-node-app:dev-${{ github.sha }}







          
